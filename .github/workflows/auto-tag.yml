name: Auto Tag Firmware Releases

on:
  push:
    branches:
      - main
      - develop
      - 'release/**'  # Auto-tag on release branches
    paths:
      - 'main/**'
      - 'CMakeLists.txt'
      - 'VERSION'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
    paths:
      - 'main/**'
      - 'CMakeLists.txt'
      - 'VERSION'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to tag (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  auto-tag:
    name: Auto-tag firmware release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create version tag (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG_NAME="v$VERSION"
          
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists"
            exit 1
          fi
          
          echo "Creating tag $TAG_NAME"
          git tag -a "$TAG_NAME" -m "ESP32 Solo Miner firmware v$VERSION"
          git push origin "$TAG_NAME"
          echo "Tag $TAG_NAME created and pushed successfully"

      - name: Auto-create tag from VERSION file
        if: github.event_name == 'push'
        run: |
          # Check if VERSION file exists
          if [ ! -f "VERSION" ]; then
            echo "VERSION file not found, skipping auto-tag"
            exit 0
          fi
          
          VERSION=$(cat VERSION | tr -d '\n\r ')
          
          if [ -z "$VERSION" ]; then
            echo "VERSION file is empty, skipping auto-tag"
            exit 0
          fi
          
          TAG_NAME="v$VERSION"
          
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists, skipping"
            exit 0
          fi
          
          # Check if VERSION file was changed in this push
          if git diff --quiet ${{ github.event.before }} ${{ github.sha }} -- VERSION; then
            echo "VERSION file not changed, skipping auto-tag"
            exit 0
          fi
          
          echo "Creating tag $TAG_NAME for firmware version $VERSION"
          git tag -a "$TAG_NAME" -m "ESP32 Solo Miner firmware v$VERSION"
          git push origin "$TAG_NAME"
          echo "Tag $TAG_NAME created and pushed successfully"
