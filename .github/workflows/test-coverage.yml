name: Test Coverage Check

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'main/*.c'
      - 'main/*.h'

jobs:
  check-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get changed files
      id: changed-files
      run: |
        # Get the list of changed C files
        git diff --name-only origin/main...HEAD | grep -E '\.(c|h)$' > changed_files.txt || echo "No C files changed"
        cat changed_files.txt
    
    - name: Check for new functions
      run: |
        echo "## Test Coverage Analysis" > test_report.md
        echo "" >> test_report.md
        
        if [ ! -s changed_files.txt ]; then
          echo "No C/C++ files were changed in this PR." >> test_report.md
          exit 0
        fi
        
        echo "### Changed Files:" >> test_report.md
        cat changed_files.txt >> test_report.md
        echo "" >> test_report.md
        
        # Look for new functions in changed files
        echo "### Functions Found in Changed Files:" >> test_report.md
        for file in $(cat changed_files.txt); do
          if [ -f "$file" ]; then
            echo "#### $file" >> test_report.md
            # Find function definitions (simple heuristic)
            grep -n "^[a-zA-Z_][a-zA-Z0-9_]*.*(.*)" "$file" | head -20 >> test_report.md || echo "No functions found" >> test_report.md
            echo "" >> test_report.md
          fi
        done
        
        # Check if test directory exists
        echo "### Test Coverage Status:" >> test_report.md
        if [ -d "test" ] || [ -d "tests" ] || [ -d "main/test" ]; then
          echo "✅ Test directory exists" >> test_report.md
        else
          echo "⚠️ No test directory found. Consider adding unit tests for new features." >> test_report.md
          echo "" >> test_report.md
          echo "**Recommendation:** Create a test directory and add unit tests for:" >> test_report.md
          echo "- Mining functions (double_sha256, count_leading_zeros)" >> test_report.md
          echo "- Block header initialization" >> test_report.md
          echo "- WiFi and I2C initialization functions" >> test_report.md
        fi
    
    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-coverage-report
        path: test_report.md
        retention-days: 30
    
    - name: Comment on PR
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('test_report.md')) {
            const report = fs.readFileSync('test_report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
          }
