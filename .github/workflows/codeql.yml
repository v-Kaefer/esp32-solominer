name: CodeQL Security Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  analyze:
    name: Analyze C/C++ Code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
        queries: security-and-quality
    
    - name: Install ESP-IDF prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
    
    - name: Cache ESP-IDF
      uses: actions/cache@v4
      id: cache-esp-idf
      with:
        path: ~/esp/esp-idf
        key: esp-idf-v5.1.2-esp32s3-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          esp-idf-v5.1.2-esp32s3-${{ runner.os }}-
    
    - name: Clone ESP-IDF
      if: steps.cache-esp-idf.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/esp
        cd ~/esp
        git clone --recursive --depth 1 --branch v5.1.2 https://github.com/espressif/esp-idf.git
    
    - name: Install ESP-IDF toolchain
      run: |
        cd ~/esp/esp-idf
        ./install.sh esp32s3
    
    - name: Create config.h from example
      run: |
        cp main/config.h.example main/config.h
    
    - name: Build project for CodeQL
      run: |
        . ~/esp/esp-idf/export.sh
        idf.py set-target esp32s3
        idf.py build
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:cpp"
