name: Code Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Check for trailing whitespace
      run: |
        # Check for trailing whitespace in source files
        if grep -rn --include="*.c" --include="*.h" --include="*.s" --include="*.S" '[[:space:]]$' main/; then
          echo "Error: Trailing whitespace found in source files"
          exit 1
        else
          echo "No trailing whitespace found"
        fi
    
    - name: Check file encodings
      run: |
        # Ensure all source files are UTF-8
        find main/ -type f \( -name "*.c" -o -name "*.h" \) -exec file {} \; | grep -v "UTF-8\|ASCII" && exit 1 || echo "All files are UTF-8 or ASCII"
    
    - name: Check for common security issues
      run: |
        echo "Checking for common security issues..."
        
        # Check for hardcoded credentials (excluding example files)
        if grep -rn --include="*.c" --include="*.h" --exclude="*example*" -E '(password|passwd|pwd|secret|token|api_key).*=.*"[^"]{3,}"' main/; then
          echo "Warning: Possible hardcoded credentials found"
        fi
        
        # Check for unsafe functions
        if grep -rn --include="*.c" -E '\b(gets|strcpy|strcat|sprintf|vsprintf)\(' main/; then
          echo "Warning: Unsafe C functions found. Consider using safer alternatives:"
          echo "  - gets() -> fgets()"
          echo "  - strcpy() -> strncpy() or strlcpy()"
          echo "  - strcat() -> strncat() or strlcat()"
          echo "  - sprintf() -> snprintf()"
          echo "  - vsprintf() -> vsnprintf()"
        fi
        
        # Check for TODO/FIXME comments
        echo "Checking for TODO/FIXME comments..."
        grep -rn --include="*.c" --include="*.h" -E '(TODO|FIXME|XXX|HACK)' main/ || echo "No TODO/FIXME comments found"
    
    - name: Check code structure
      run: |
        echo "Analyzing code structure..."
        
        # Count lines of code
        echo "Lines of code:"
        find main/ -name "*.c" -exec wc -l {} + | tail -1
        
        # Check for overly long functions (simple heuristic)
        echo "Checking for long functions (>200 lines)..."
        for file in main/*.c; do
          awk '/^[a-zA-Z_].*\(.*\)/ {start=NR; fname=$0} /^}/ && start {if (NR-start > 200) print FILENAME":"start": Function too long ("NR-start" lines): "fname; start=0}' "$file"
        done || echo "No excessively long functions found"
